version: 2.1
jobs:
  rspec:
    working_directory: ~/manu_match
    docker:
      - image: circleci/ruby:2.7.1
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gemfiles-{{ .Branch }}-
            - gemfiles-master-
      - run: bundle config --local path vendor/bundle
      - run:
          name: bundle install
          command: bundle check || bundle install --jobs=8 --clean
      - run:
          name: Setup environment variable
          command: |
            echo "export COMPOSE_FILE=docker-compose.ci.yml" >> $BASH_ENV
      - run:
          name: Start containers and verify it is working
          command: |
            set -x
            docker-compose up -d
            docker run --network container:manu_match_app \
              appropriate/curl --retry 10 --retry-delay 3 --retry-connrefused http://localhost:3000
      - run: bundle exec rake db:create
      - run: bundle exec rake db:seed
      - run:
          name: Run rspec
          command: docker-compose exec manu_match rspec

  rubocop:
    working_directory: ~/manu_match
    docker:
      - image: circleci/ruby:2.7.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gemfiles-{{ .Branch }}-
            - gemfiles-master-
      - run: bundle config --local path vendor/bundle
      - run:
          name: bundle install
          command: bundle check || bundle install --jobs=8 --clean
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel
      - save_cache:
          key: gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  brakeman:
    working_directory: ~/manu_match
    docker:
      - image: circleci/ruby:2.7.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gemfiles-{{ .Branch }}-
            - gemfiles-master-
      - run: bundle config --local path vendor/bundle
      - run:
          name: bundle install
          command: bundle check || bundle install --jobs=8 --clean
      - run:
          name: Run brakeman
          command: bundle exec brakeman

  heroku_deploy:
    working_directory: ~/manu_match
    docker:
      - image: sue445/heroku-cli
    steps:
      - checkout
      - build-tools/install-ci-tools
      - jq/install
      - run:
          name: Identify who I am
          command: echo 'export MY_EMAIL=`heroku auth:whoami | tail -n 1`' >> $BASH_ENV
      - run:
          name: Identify Heroku app names to destroy
          command: echo 'export APP_NAMES_TO_REMOVE=`heroku apps --json | jq -r "map(select(.owner.email == "\"$MY_EMAIL\"" and (.name | contains(\"manu_match\")))) | sort_by(.updated_at) | reverse | .[5:] | .[].name"`' >> $BASH_ENV
      - run:
          name: Delete old apps if needed
          command: for app_name in $APP_NAMES_TO_REMOVE; do heroku apps:destroy -a $app_name -c $app_name; done
      - run:
          name: Define Heroku app name to create
          command: timestamp=`date +%Y%m%d%H%M%S` && echo "export HEROKU_APP_NAME=manu_match-$timestamp" >> $BASH_ENV
      - run:
          name: Create fresh Heroku app
          command: heroku apps:create $HEROKU_APP_NAME --addons=jawsdb:kitefin
      - run:
          name: Deploy
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
      - run:
          name: Run post-deploy tasks
          command: |
            heroku config:set AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            heroku config:set S3_HOST_NAME=$S3_HOST_NAME
            heroku config:set S3_REGION=$S3_REGION
            heroku config:set S3_BUCKET_NAME=$S3_BUCKET_NAME
            heroku config:set RAILS_MASTER_KEY=$RAILS_MASTER_KEY
            heroku run bin/rails db:migrate
            heroku run bin/rails db/seeds

orbs:
  build-tools: circleci/build-tools@2.7.0
  jq: circleci/jq@2.2.0
workflows:
  version: 2.1
  build:
    jobs:
      - rspec
      - rubocop
      - brakeman
      - heroku_deploy:
          requires:
            - rspec
            - rubocop
            - brakeman
